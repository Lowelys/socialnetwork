{"version":3,"sources":["redux/dialogs-reducer.js","components/Users/users.module.css","assets/images/avatar.jpg","assets/images/Spinner.svg","components/Navbar/Navbar.module.css","serviceWorker.js","components/Navbar/Navbar.jsx","utils/object-helpers.js","redux/users-reducer.js","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","hoc/withSuspense.js","App.js","index.js","components/common/FormsControls/FormsControls.js","components/common/Preloader/Preloader.js","components/common/FormsControls/FormsControls.module.css","utils/validators/validators.js","components/common/Paginator/Paginator.module.css","components/Header/Header.module.css","api/api.js","redux/profile-reducer.js"],"names":["initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","module","exports","Boolean","window","location","hostname","match","Navbar","className","s","nav","item","to","activeClassName","activeLink","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","followSuccess","userId","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","data","resultCode","usersReducer","followed","count","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","onClick","p","cn","selectedPage","pageNumber","key","e","User","user","unfollow","follow","src","photos","small","userPhoto","disabled","some","status","Users","props","getUsers","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","this","Preloader","React","Component","compose","connect","usersAPI","bind","page","totalCount","Header","header","loginBlock","isAuth","login","logout","SET_USER_DATA","usersId","email","setAuthUserData","payload","getAuthUserData","authAPI","me","response","authReducer","HeaderContainer","auth","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","required","Input","style","formSummaryError","password","rememberMe","length","stopSubmit","_error","formData","initialized","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","withSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","path","render","AppContainer","withRouter","promise","Promise","all","then","SocialJSApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","FormControl","input","meta","touched","children","hasError","formControl","Textarea","restProps","child","placeholder","validators","component","text","validate","backgroundColor","preloader","value","maxLengthCreator","maxLength","instance","axios","withCredentials","baseURL","headers","get","post","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","put","posts","likesCount","profile","addPostActionCreator","newPostText","setStatus","getUserProfile","newPost"],"mappings":"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","file":"static/js/main.b003fc3d.chunk.js","sourcesContent":["const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrew'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Viktor'},\r\n        {id: 6, name: 'Valera'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is your it?'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return  {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody});\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__3RbLp\",\"selectedPage\":\"users_selectedPage__2FPz2\"};","module.exports = __webpack_public_path__ + \"static/media/avatar.2911e64c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Spinner.1dd4b4ec.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3UWtW\",\"item\":\"Navbar_item__JjhGa\",\"activeLink\":\"Navbar_activeLink__13O4h\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport s from './Navbar.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return <nav className={s.nav}>\r\n        <div className={s.item}>\r\n            <NavLink to='/profile' activeClassName={s.activeLink}>Profile</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to='/dialogs' activeClassName={s.activeLink}>Messages</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to='/users' activeClassName={s.activeLink}>Users</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <a>news</a>\r\n        </div>\r\n        <div className={s.item}>\r\n            <a>Music</a>\r\n        </div>\r\n        <div className={s.item}>\r\n            <a>Settings</a>\r\n        </div>\r\n    </nav>\r\n\r\n}\r\n\r\nexport default Navbar;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n};","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true} )\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false} )\r\n            };\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\r\nexport const setUsers = (users) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount});\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n});\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n};\r\n\r\nconst followUnfollowFlow =async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n\r\n};\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n    }\r\n};\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n\r\n    }\r\n};\r\nexport default usersReducer;","import React, {useState} from 'react';\r\nimport styles from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    return <div className={styles.paginator}>\r\n        {portionNumber > 1 &&\r\n        <button onClick={() => {\r\n            setPortionNumber(portionNumber - 1)\r\n        }}>PREV</button>}\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n            .map((p) => {\r\n                return <span className={cn({\r\n                    [styles.selectedPage]: currentPage === p\r\n                }, styles.pageNumber)}\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        {portionCount > portionNumber &&\r\n        <button onClick={() => {\r\n            setPortionNumber(portionNumber + 1)}}>NEXT</button>}\r\n\r\n\r\n    </div>\r\n};\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport styles from \"./users.module.css\";\r\nimport userPhoto from '../../assets/images/avatar.jpg';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow}) => {\r\n    return <div>\r\n                <span>\r\n                    <div>\r\n                       <NavLink to={'/profile/' + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                             className={styles.userPhoto}/>\r\n                       </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {user.followed\r\n                            ? <button disabled={followingInProgress\r\n                                .some(id => id === user.id)}\r\n                                      onClick={() => {\r\n                                          unfollow(user.id)\r\n                                      }}>\r\n                                Unfollow</button>\r\n                            : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                                      onClick={() => {\r\n                                          follow(user.id)\r\n                                      }}>\r\n                                Follow</button>}\r\n                    </div>\r\n                </span>\r\n        <span>\r\n                    <span>\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{'user.location.country'}</div>\r\n                        <div>{'user.location.city'}</div>\r\n                    </span>\r\n                </span>\r\n    </div>\r\n};\r\n\r\nexport default User;","import React from 'react';\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\r\n    return <div>\r\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n                   totalItemsCount={totalUsersCount} pageSize={pageSize}/>\r\n        <div>\r\n            {\r\n                users.map(u => <User user={u}\r\n                                     followingInProgress={props.followingInProgress}\r\n                                     key={u.id}\r\n                                     unfollow={props.unfollow}\r\n                                     follow={props.follow}\r\n                    />\r\n                )\r\n            }\r\n        </div>\r\n    </div>\r\n};\r\n\r\nexport default Users;","import {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n};\r\n\r\nexport const getUsers = createSelector(getUsersSelector,\r\n    (users) => {\r\n        return users.filter(u => true);\r\n    });\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n};\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n};\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n};\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n};\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n};\r\n\r\nexport const countSomethingDifficult = (state) => {\r\n    let count = 23;\r\n    return count;\r\n};","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    unfollow, toggleFollowingProgress, requestUsers\r\n} from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers,\r\n} from \"../../redux/users-selectors\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.getUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props;\r\n        this.props.getUsers(pageNumber, pageSize);\r\n    };\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unfollow}\r\n                   followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    };\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n};\r\nexport default compose(\r\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers: requestUsers})\r\n    (UsersContainer));","import React from 'react';\r\nimport s from './Header.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <img src='https://mir-s3-cdn-cf.behance.net/projects/max_808/96faca82769309.Y3JvcCwxNzQ5LDEzNjgsMjk4LDA.png'/>\r\n        <div className={s.loginBlock}>\r\n            {props.isAuth\r\n                ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\r\n                : <NavLink to={'/login'}>Login</NavLink>}\r\n\r\n        </div>\r\n    </header>\r\n};\r\n\r\nexport default Header;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'social-network/auth/SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    usersId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_USER_DATA, payload:\r\n        {userId, email, login, isAuth}\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        let {id, login, email} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n};\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData(null, null, null, false))\r\n    }\r\n};\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    };\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n\r\n});\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from \"./../common/FormsControls/FormsControls.module.css\"\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n\r\n        <form onSubmit={handleSubmit}>\r\n\r\n            {createField('Email', 'email', [required], Input)}\r\n            {createField('Password', 'password', [required], Input, {type: 'password'})}\r\n            {createField(null, 'rememberMe', [], Input, {type: 'checkbox'}, 'remember me')}\r\n\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n\r\n    };\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\nexport default connect(mapStateToProps, {login})(Login);","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise =  dispatch(getAuthUserData());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess());\r\n        });\r\n};\r\n\r\nexport default appReducer;","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n};\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React from \"react\";\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<Preloader/>}>\r\n            <Component {...props}/>\r\n        </React.Suspense>\r\n    }\r\n};","import React from 'react';\r\nimport './App.css';\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport {BrowserRouter, Route, withRouter} from \"react-router-dom\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport LoginPage from \"./components/Login/Login\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport store from \"./redux/redux-store\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\n\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n        return (\r\n            <div className='app-wrapper'>\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n                <div className='app-wrapper-content'>\r\n                    <Route path='/dialogs'\r\n                           render={withSuspense(DialogsContainer)}/>\r\n                    <Route path='/profile/:userId?'\r\n                           render={withSuspense(ProfileContainer)} />\r\n                    <Route path='/users'\r\n                           render={() => <UsersContainer/>}/>\r\n                    <Route path='/login'\r\n                           render={() => <LoginPage/>}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n});\r\nlet AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))(App);\r\n\r\nconst SocialJSApp = (props) => {\r\n    return <BrowserRouter>\r\n        <Provider store={store}>\r\n            <AppContainer />\r\n        </Provider>\r\n    </BrowserRouter>\r\n}\r\n\r\nexport default SocialJSApp;","import * as serviceWorker from './serviceWorker';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport SocialJSApp from \"./App\";\r\n\r\nReactDOM.render(<SocialJSApp/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\";\r\nimport {required} from \"../../../utils/validators/validators\";\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n};\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n};\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name}\r\n               validate={validators}\r\n               component={component}\r\n               {...props}\r\n        /> {text}\r\n    </div>\r\n);","import React from 'react';\r\nimport preloader from '../../../assets/images/Spinner.svg';\r\n\r\nlet Preloader = (props) => {\r\n    return <div  style={ {backgroundColor: 'white'} }>\r\n        <img src={preloader} />\r\n    </div>\r\n};\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2pu-1\",\"error\":\"FormsControls_error__3pdM5\",\"formSummaryError\":\"FormsControls_formSummaryError__QKCp1\"};","export const required = value => {\r\n    if (value) return undefined;\r\n\r\n    return \"Field is required\";\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__LIlIl\",\"pageNumber\":\"Paginator_pageNumber__l-XII\",\"selectedPage\":\"Paginator_selectedPage__3l3AP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2J3UO\",\"loginBlock\":\"Header_loginBlock__37i9_\"};","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': '279228c3-424a-4fec-9955-c1d11ad9779f'\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn('Obsolete method');\r\n        return profileAPI.getProfile(userId);\r\n    },\r\n};\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId);\r\n\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status: status});\r\n    }\r\n};\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, { email, password, rememberMe });\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    },\r\n};\r\n\r\n\r\n","import {profileAPI, usersAPI} from \"../api/api\";\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS ';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 11},\r\n        {id: 3, message: 'Blabla', likesCount: 11},\r\n        {id: 4, message: 'Dada', likesCount: 11}\r\n    ],\r\n    profile: null,\r\n    status: ''\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText});\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n};\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    const response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n\r\n};\r\nexport const updateStatus = (status) =>async (dispatch) => {\r\n    const response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n};\r\n\r\nexport default profileReducer;"],"sourceRoot":""}