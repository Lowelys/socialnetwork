{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","src","className","s","descriptionBlock","photos","large","Preloader","Post","item","message","likeCount","MyPosts","postsElement","posts","map","p","maxLength10","React","createRef","maxLengthCreator","AddNewPostForm","onSubmit","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","reduxForm","form","postsBlock","values","addPost","newPostText","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.c7fe9e57.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2-7SQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2OWwZ\",\"posts\":\"MyPosts_posts__EiUYb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__32s1H\"};","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || '------'}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={ deactivateEditMode }\r\n                       value={status} />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css'\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img src='https://c.radikal.ru/c07/1911/02/b3aec4a81cbe.jpg'/>\r\n            </div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large}/>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img\r\n                src='https://www.e-olymp.com/uploads/users/5a/9f/5a9f967fa2985.jpg'/>\r\n            {props.message}\r\n            <div>\r\n                <span>like </span>\r\n                {props.likeCount}\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst MyPosts = (props) => {\r\n    let postsElement =\r\n        props.posts.map(p => <Post message={p.message} likeCount={p.likeCount}/>)\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    };\r\n\r\n    const maxLength10 = maxLengthCreator(10);\r\n\r\n    let AddNewPostForm = (props) => {\r\n        return <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name=\"newPostText\" component={Textarea} placeholder={\"Post message\"}\r\n                       validate={[required, maxLength10]} />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    };\r\n\r\n    AddNewPostForm = reduxForm({form: 'ProfileAddNewPostForm'})(AddNewPostForm);\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My post</h3>\r\n            <AddNewPostForm onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElement}\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login');\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n)(ProfileContainer);\r\n\r\n"],"sourceRoot":""}